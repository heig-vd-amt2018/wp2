swagger: '2.0'
info:
  version: '0.1.0'
  title: WP2 API
  description: Gamification API for WP2
host: localhost:8080
basePath: /api
schemes:
  - http
paths:
  /badges:
    post:
      tags:
        - "badges"
      summary: "Add a new badge to the app"
      description: create a badge
      operationId: createBadge
      consumes:
        - application/json
      parameters:
        - name: badge
          in: body
          required: true
          schema:
            $ref: '#/definitions/Badge'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/Location'
        '401':
          $ref: "#/responses/Unauthorized"
    get:
      tags:
        - "badges"
      summary: "Return all the badges for an app"
      description: get the list of all badges
      operationId: getBadges
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Badge'
        '401':
          $ref: "#/responses/Unauthorized"

  /badges/{id}:
    get:
      tags:
        - "badges"
      summary: "Return a specific app badge from its name"
      parameters:
        - in : path
          name : id
          type: integer
          format: int64
          required : true
          description : bagde's id
      operationId: getBadge
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/Badge'
        '401':
          $ref: "#/responses/Unauthorized"
    patch:
      tags:
        - "badges"
      summary: "Update a specific badge"
      description: update a badge
      operationId: updateBadge
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          format: int64
          required: true
          description: badge's id
        - in: body
          name: badge
          required: true
          schema:
            $ref: '#/definitions/Badge'
      responses:
        '200':
          description: updated
          schema:
            $ref: '#/definitions/Location'
        '401':
          $ref: "#/responses/Unauthorized"


  /pointScales:
    post:
      tags:
        - "pointScales"
      summary: "Add a new pointScale to the app"
      description: create a pointScale
      operationId: createPointScale
      consumes:
        - application/json
      parameters:
        - name: pointScale
          in: body
          required: true
          schema:
            $ref: '#/definitions/PointScale'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/Location'
        '401':
          $ref: "#/responses/Unauthorized"

    get:
      tags:
        - "pointScales"
      summary: "Return all the pointScales of the app"
      description: get the list of all pointScales
      operationId: getPointScales
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/PointScale'
        '401':
          $ref: "#/responses/Unauthorized"

  /pointScales/{id}:
    get:
      tags:
        - "pointScales"
      summary: "Return a specific pointScales with the id"
      description: get the specific app pointScale
      parameters:
        - in : path
          name : id
          type : integer
          format: int64
          required : true
          description: pointScale's id
      operationId: getPointScale
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/PointScale'
        '401':
          $ref: "#/responses/Unauthorized"
    patch:
      tags:
        - "pointScales"
      summary: "Update a specific pointScale"
      description: update a pointScale
      operationId: updatePointScales
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          type: integer
          format: int64
          required: true
          description: pointScale's id
        - in: body
          name: pointScale
          required: true
          schema:
            $ref: '#/definitions/PointScale'
      responses:
        '200':
          description: updated
          schema:
            $ref: '#/definitions/Location'
        '401':
          $ref: "#/responses/Unauthorized"



  /rules:
    post:
      tags:
        - "rules"
      summary: "Add a new rules to the app"
      description: create a rule
      operationId: createRule
      consumes:
        - application/json
      parameters:
        - in: body
          name: rule
          required: true
          schema:
            $ref: '#/definitions/Rule'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/Location'
        '401':
          $ref: "#/responses/Unauthorized"
    get:
      tags:
        - "rules"
      summary: "Get all rules defined for the app"
      description: get rules
      operationId: getRules
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Rule'
        '401':
          $ref: "#/responses/Unauthorized"

  /rules/{id}:
    get:
      tags:
        - "rules"
      summary: "Return a specific app rule from its name"
      parameters:
        - in : path
          name : id
          type: integer
          format: int64
          required : true
          description : rule's id
      operationId: getRule
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/Rule'
        '401':
          $ref: "#/responses/Unauthorized"
    patch:
      tags:
        - "rules"
      summary: "Update a specific rule"
      description: update a rule
      operationId: updateRule
      consumes:
        - application/json
      parameters:
        - in : path
          name : id
          type: integer
          format: int64
          required : true
          description : rule's id
        - in: body
          name: rule
          required: true
          schema:
            $ref: '#/definitions/Rule'
      responses:
        '200':
          description: updated
          schema:
            $ref: '#/definitions/Location'
        '401':
          $ref: "#/responses/Unauthorized"

  /events:
    post:
      tags:
        - "events"
      summary: "send event"
      description: post event
      operationId: postEvent
      consumes:
        - application/json
      parameters:
        - name: event
          in: body
          required: true
          schema:
            $ref: '#/definitions/Event'
      responses:
        '200':
          description: handled
        '401':
          $ref: "#/responses/Unauthorized"

definitions:
  Badge:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      image:
        type: string
      description:
        type: string

  PointScale:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string

  Rule:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      eventName:
        type: string
      apiKey:
        type: string
      pointScaleName:
        type: string
      badgeName:
        type: string
      threshold:
        type: integer
        format: int64

  User:
    type: object
    properties:
      id:
        type: integer
        format: int64

  Location:
    type: object
    properties:
      location:
        type: string

  Event:
    type: object
    properties:
      userId:
        type: integer
        format: int64
      timestamp:
        type: integer
        format: date-type
      type:
        type: string
      quantity:
        type: integer
        format: int64

securityDefinitions:
  ApiKey:
    description: "Format: {apiKey}"
    type: apiKey
    name: Authorization
    in: header

security:
  - ApiKey: []

responses:
  Unauthorized:
    description: "Unauthorized access"